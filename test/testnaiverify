#!/bin/sh

######
# Test the naiverify binary; the optional $1 is the executable naiverify
###

if [ "$#" -ge 1 ]
then
	naiverify="$1"
else
	naiverify="$(dirname $0)/../naiverify"
fi

_haserr=0

# Print error for an erroneously accepted string.
# $1 - the tested string
perr_accept() {
	_haserr=1
	echo ERROR \""$1"\" accepted
}

# Print error for an erroneously unaccepted string.
# $1 - the tested string
perr_notaccept() {
	_haserr=1
	echo ERROR \""$1"\" not accepted
}


######
# First test a bunch of invalid NAIs
###

t=""
"$naiverify" -q "$t" && perr_accept "$t"

t="."
"$naiverify" -q "$t" && perr_accept "$t"

t="f."
"$naiverify" -q "$t" && perr_accept "$t"

t="fo."
"$naiverify" -q "$t" && perr_accept "$t"

t=".f"
"$naiverify" -q "$t" && perr_accept "$t"

t=".fo"
"$naiverify" -q "$t" && perr_accept "$t"

t="@"
"$naiverify" -q "$t" && perr_accept "$t"

t="f@"
"$naiverify" -q "$t" && perr_accept "$t"

t="@c"
"$naiverify" -q "$t" && perr_accept "$t"

t="@co"
"$naiverify" -q "$t" && perr_accept "$t"

t="@."
"$naiverify" -q "$t" && perr_accept "$t"

t="@.c"
"$naiverify" -q "$t" && perr_accept "$t"

t="@.co"
"$naiverify" -q "$t" && perr_accept "$t"

t="@e."
"$naiverify" -q "$t" && perr_accept "$t"

t="@ex."
"$naiverify" -q "$t" && perr_accept "$t"

# tests from RFC 4282

t="fred@example"
"$naiverify" -q "$t" && perr_accept "$t"

t="fred@example_9.com"
"$naiverify" -q "$t" && perr_accept "$t"

t="fred@example.net@example.net"
"$naiverify" -q "$t" && perr_accept "$t"

t="fred.@example.net"
"$naiverify" -q "$t" && perr_accept "$t"

t="eng:nancy@example.net"
"$naiverify" -q "$t" && perr_accept "$t"

t="eng;nancy@example.net"
"$naiverify" -q "$t" && perr_accept "$t"

t="(user)@example.net"
"$naiverify" -q "$t" && perr_accept "$t"

t="<nancy>@example.net"
"$naiverify" -q "$t" && perr_accept "$t"


######
# Now test some valid NAIs
###

t="foo"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="@example.com"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="foo@example.com"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="f"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="fo"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="f.b"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="fo.ba"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="f@e.c"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="@e.x"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="fo@ex.co"
"$naiverify" -q "$t" || perr_notaccept "$t"

# tests from RFC 4282

t="bob"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="joe@example.com"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="fred@foo-9.example.com"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="jack@3rd.depts.example.com"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="fred.smith@example.com"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="fred_smith@example.com"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="fred\$@example.com"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="fred=?#\$&*+-/^smith@example.com"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="nancy@eng.example.net"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="eng.example.net!nancy@example.net"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="eng%nancy@example.net"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="@privatecorp.example.net"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="\(user\)@example.net"
"$naiverify" -q "$t" || perr_notaccept "$t"

t="alice@xn--tmonesimerkki-bfbb.example.net"
"$naiverify" -q "$t" || perr_notaccept "$t"


###
# Finish up

if [ "$_haserr" -ne 0 ]; then
	# assume errors are already printed
	exit 1
fi
