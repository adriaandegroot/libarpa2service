.\" Copyright (c) 2018, 2019 Tim Kuijsten
.\"
.\" Permission to use, copy, modify, and/or distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd February 7, 2019
.Dt A2ID_PARSESTR 3
.Os
.Sh NAME
.Nm a2id_parsestr
.Nd parse an A2ID or A2ID Selector string
.Sh SYNOPSIS
.In arpa2/a2id.h
.Ft int
.Fo a2id_parsestr
.Fa "struct a2id *out"
.Fa "const char *in"
.Fa "int selector"
.Fc
.Sh DESCRIPTION
.Fn a2id_parsestr
parses the string
.Fa in
and writes the result in
.Fa out .
.Fa in
must be a nul terminated string.
.Fa selector
is a boolean that indicates wheter or not the input should be parsed as a
selector. A selector is a generalization of an A2ID.
.Pp
On success the following fiels of the
.Fa out
structure are set:
.Bl -tag -width Ds
.It Fa type
.It Fa hassig
whether the ID has a signature or not
.It Fa nropts
total number of options
.It Fa localpart
points to the first character of the ID
.It Fa localpartlen
length, 0 if there is no localpart
.It Fa basename
points to the first character of the name
.It Fa basenamelen
length, 0 if there is no basename
.It Fa firstopt
points to leading
.Sq +
if it exists
.It Fa firstoptlen
length including leading
.Sq + ,
0 if there is no firstopt
.It Fa sigflags
points to leading
.Sq +
if it exists
.It Fa sigflagslen
length including leading
.Sq + ,
0 if there are no sigflags
.It Fa domain
points to leading
.Sq @ ,
always exists in a valid ID
.It Fa domainlen
length including
.Sq @ ,
every valid ID requires a domain
.It Fa idlen
total length of the ID
.El
.Pp
.Fa localpart ,
.Fa basename ,
.Fa firstopt ,
.Fa sigflags
and
.Fa domain
are not guaranteed to be nul terminated.
.Pp
On error
.Fa idlen
contains the length of the string up to but not including the first erroneous
character in
.Fa in .
Another way to read this is, on error
.Fa idlen
contains the index of the first erroneaous character in
.Fa in .
.Sh RETURN VALUES
.Fn a2id_parsestr
returns 0 if
.Fa in
is a valid A2ID and could be parsed. On error -1 is returned and
.Fa idlen
contains the index of the first erroneous character in
.Fa in .
.Sh SEE ALSO
.Xr a2id_match 3 ,
.Xr isgraph 3
.Sh STANDARDS
The grammar of an A2ID and A2ID Selector is documented in a2idgrammar.txt and
a2idselgrammar.txt in the doc/design directory of the source code
.Lk https://github.com/arpa2/libarpa2service repository
.Pp
The ARPA2 ID is based on the Network Access Identifier as specified in
RFC 4282.
.Sh AUTHOR
.An -nosplit
.An Tim Kuijsten Aq Mt tim@netsend.nl
.Sh CAVEATS
The current grammar of an A2ID only supports a subset of US-ASCII, notably the
set supported by
.Xr isgraph 3 .
In the future UTF-8 should probably be supported, but special care needs to be
taken for any Unicode characters that have the same visual representation. A
good pointer to start with would be RFC 8265 and 7542 and the notes about
normalization in these documents.
