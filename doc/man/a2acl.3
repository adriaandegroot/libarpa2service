.\" Copyright (c) 2019 Tim Kuijsten
.\"
.\" Permission to use, copy, modify, and/or distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: February 8 2019 $
.Dt A2ACL 3
.Os
.Sh NAME
.Nm a2acl_fromfile ,
.Nm a2acl_whichlist
.Nd library to work with ARPA2 Access Control Lists
.Sh SYNOPSIS
.In arpa2/a2acl.h
.Ft ssize_t
.Fo a2acl_fromfile
.Fa "const char *filename"
.Fa "size_t *totrules"
.Fa "size_t *updrules"
.Fa "char *errstr"
.Fa "size_t errstrsize"
.Fc
.Ft int
.Fo a2acl_whichlist
.Fa "char *list"
.Fa "struct a2id *remoteid"
.Fa "const struct a2id *localid"
.Fc
.Sh DESCRIPTION
The
.Fn a2acl_fromfile
function imports an ACL policy from a text file specified by
.Fa filename
into an internal database cache.
If a database cache file does not exist, it is created and if the cache is stale
it is automatically recreated.
The currently supported database backends are
.Dq dbm
and
.Dq dblmdb
of which the first is a simple memory based key-value store, and the latter is
using LMDB.
If
.Fa totrules
is not
.Dv NULL ,
it will be updated with the total number of rules in the database.
If
.Fa updrules
is not
.Dv NULL
it will be updated with the number of newly imported rules by this call.
If there is an error and
.Fa errstr
is not
.Dv NULL ,
then
.Fa errstr
is updated with a descriptive error of at most
.Fa errstrsize
bytes, including a terminating nul.
The syntax of
.Fa filename
is described in
.Xr a2acl.conf 5 .
.Pp
The
.Fn a2acl_whichlist
function determines if communication between
.Fa remoteid
and
.Fa localid
is whitelisted, greylisted, blacklisted or abandoned.
The result is written to
.Fa list
in the form of the first letter of the list this pair is on which is one of:
.Sq W ,
.Sq G ,
.Sq B ,
.Sq A .
If no policy is found it is set to
.Sq G .
.Pp
.Fa remoteid
will be generalized until an ACL rule is found or until it equals the most
general selector
.Dq @.
which can not be further generalized.
If
.Fn a2acl_whichlist
succeeds, the caller can get the specific generalization on which a match was
made by calling
.Fn a2id_tostr 3
on
.Fa remoteid .
.Sh RETURN VALUES
.Rv -std a2acl_fromfile
.Pp
The
.Fn a2acl_whichlist
funcion returns 0 if successful and updates
.Fa list
to point to the applicable list-character; otherwise the value -1 is returned.
.Sh SEE ALSO
.Xr a2id 3 ,
.Xr a2id_parsestr 3 ,
.Xr a2acl.conf 5
.Pp
.Lk https://github.com/arpa2/libarpa2service/blob/master/doc/design/a2idacl-intro.md "ARPA2 Identifier and ACL introduction"
.Lk https://symas.com/lmdb/ "LMDB"
.Sh AUTHORS
.An -nosplit
.An Tim Kuijsten
.Sh CAVEATS
.Fn a2acl_whichlist
returns -1 if an encountered ACL rule is syntactically incorrect.
It would be better if these syntax checks are done at import.
