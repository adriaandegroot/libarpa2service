Domain-or-Network-Access-Identifier Grammar
===========================================

DoNAI user formal syntax.

The grammar for the user is given below, described in Augmented
Backus-Naur Form (ABNF) as documented in [RFC5234].

donai-user     = user /
                 useralias /
                 userflags /
                 usersig /
                 service
user           = string
useralias      = string "+" string
userflags      = string "+" string "+"
usersig        = string "+" string "+" string
service        = "+" plus-string
plus-string    = string *("+" string)
string         = 1*atext
atext          = ALPHA / DIGIT /
                 "!" / "#" /
                 "$" / "%" /
                 "&" / "'" /
                 "*" / "." /
                 "-" / "/" /
                 "=" / "?" /
                 "^" / "_" /
                 "`" / "{" /
                 "|" / "}" /
                 "~" /
                 UTF8-xtra-char

UTF8-xtra-char = UTF8-2 / UTF8-3 / UTF8-4

UTF8-2         = %xC2-DF UTF8-tail

UTF8-3         = %xE0 %xA0-BF UTF8-tail /
                 %xE1-EC 2( UTF8-tail ) /
                 %xED %x80-9F UTF8-tail /
                 %xEE-EF 2( UTF8-tail )

UTF8-4         = %xF0 %x90-BF 2( UTF8-tail ) /
                 %xF1-F3 3( UTF8-tail ) /
                 %xF4 %x80-8F 2( UTF8-tail )

UTF8-tail      = %x80-BF





grammar     = donai
donai       =  domain
donai       =/ "@" domain
donai       =/ username "@" domain
username    =  dot-string
dot-string  =  string
dot-string  =/ dot-string "." string
string      =  char
string      =/ string char

char        =  c
char        =/ "\" x
c           =  %x21    ; !
c           =/ %x23-27 ; # $ % & '
c           =/ %x2A-2B ; * +
c           =/ %x2D    ; -
c           =/ %x2F-39 ; / 0-9
c           =/ %x3D    ; =
c           =/ %x3F    ; ?
c           =/ %x41-5a ; A-Z
c           =/ %x5E-7E ; ^ _ ` a-z { | } ~
c           =/ %x80-FF ; UTF-8-Octet (not in RFC 2486)
                       ; Where UTF-8-octet is any octet in the
                       ; multi-octet UTF-8 representation of a
                       ; unicode codepoint above %x7F.
                       ; Note that c must also satisfy rules in
                       ; Section 2.4, including, for instance,
                       ; checking that no prohibited output is
                       ; used (see also Section 2.3 of
                       ; [RFC4013]).

                       ; " ( ) , . ; : < > @ [ \ ] DEL	are not allowed

x           =  %x00-FF ; all 128 ASCII characters, no exception;
                       ; as well as all UTF-8-octets as defined
                       ; above (this was not allowed in
                       ; RFC 2486).  Note that x must nevertheless
                       ; again satisfy the Section 2.4 rules.

domain      =  *( label "." ) label
label       =  let-dig *(ldh-str)
ldh-str     =  *( alpha / digit / "-" ) let-dig
let-dig     =  alpha / digit
alpha       =  %x41-5A  ; A-Z
alpha       =/ %x61-7A  ; a-z
digit       =  %x30-39  ; 0-9
